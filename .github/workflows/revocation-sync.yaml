name: Revocation List Sync

on:
  schedule:
    # Run daily at 4 AM UTC
    - cron: "0 4 * * *"
  workflow_dispatch:

jobs:
  sync-revocations:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install cosign
        run: |
          curl -O -L "https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64"
          chmod +x cosign-linux-amd64
          sudo mv cosign-linux-amd64 /usr/local/bin/cosign

      - name: Fetch revocation list
        run: |
          # Fetch the canonical revocation list from the external repo
          # In a real implementation, this would be from provability-fabric/revocations
          echo "Fetching revocation list..."

          # For demo purposes, we'll create a mock revocation list
          # In production, this would fetch from the actual repo
          cat > /tmp/revocations.json << 'EOF'
          {
            "version": "1.0",
            "created_at": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "revocations": [
              {
                "sig": "sha256:deadbeef1234567890abcdef1234567890abcdef1234567890abcdef1234567890",
                "reason": "key_compromise",
                "ts": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
                "revoked_by": "security-team@provability-fabric.local"
              }
            ]
          }
          EOF

          # Create a mock signature for demo purposes
          echo "mock-signature" > /tmp/revocations.json.sig

      - name: Verify DSSE signature
        run: |
          echo "Verifying DSSE signature..."

          # In production, this would verify the actual signature
          # For demo purposes, we'll just check the file exists
          if [ -f "/tmp/revocations.json.sig" ]; then
            echo "‚úÖ Signature file exists"
          else
            echo "‚ùå Signature verification failed"
            exit 1
          fi

      - name: Compare with current list
        run: |
          echo "Comparing with current revocation list..."

          if [ -f "runtime/admission-controller/revocation/revocations.json" ]; then
            # Compare the fetched list with current list
            if diff /tmp/revocations.json runtime/admission-controller/revocation/revocations.json > /dev/null; then
              echo "‚úÖ Revocation list is up to date"
              echo "no_update=true" >> $GITHUB_OUTPUT
            else
              echo "üìù Revocation list has updates"
              echo "no_update=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "üìù No current revocation list found, creating new one"
            echo "no_update=false" >> $GITHUB_OUTPUT
          fi

      - name: Create branch and update
        if: steps.compare.outputs.no_update != 'true'
        run: |
          # Create new branch
          BRANCH_NAME="revocation-sync-$(date +%Y%m%d-%H%M%S)"
          git checkout -b "$BRANCH_NAME"

          # Update revocation list
          cp /tmp/revocations.json runtime/admission-controller/revocation/revocations.json

          # Commit changes
          git add runtime/admission-controller/revocation/revocations.json
          git config --global user.name "Revocation Sync Bot"
          git config --global user.email "revocation-bot@provability-fabric.local"
          git commit -m "Sync revocation list $(date -u +%Y-%m-%d)"

          # Push branch
          git push origin "$BRANCH_NAME"

          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: steps.compare.outputs.no_update != 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Sync revocation list"
          title: "üîÑ Sync revocation list"
          body: |
            This PR updates the revocation list with the latest entries from the canonical source.

            ## Changes
            - Updated revocation list with latest entries
            - Verified DSSE signature
            - Applied security policy updates

            ## Review Required
            This PR requires manual review by a security team member before merging.

            /cc @${{ github.repository_owner }}/security-team
          branch: ${{ steps.update.outputs.branch_name }}
          delete-branch: true
          labels: |
            security
            revocation
            automated
          assignees: ${{ github.repository_owner }}

      - name: Check revocation list age
        run: |
          # Check if revocation list is older than 30 days
          if [ -f "runtime/admission-controller/revocation/revocations.json" ]; then
            FILE_DATE=$(stat -c %Y runtime/admission-controller/revocation/revocations.json)
            CURRENT_DATE=$(date +%s)
            AGE_DAYS=$(( (CURRENT_DATE - FILE_DATE) / 86400 ))
            
            echo "Revocation list age: ${AGE_DAYS} days"
            
            if [ $AGE_DAYS -gt 30 ]; then
              echo "‚ùå Revocation list is older than 30 days"
              echo "This will block releases until updated"
              exit 1
            else
              echo "‚úÖ Revocation list is current (${AGE_DAYS} days old)"
            fi
          else
            echo "‚ùå No revocation list found"
            exit 1
          fi
