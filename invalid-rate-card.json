          {
            "cpuPerMs": -0.000001,
            "networkPerMB": 0.01,
            "minimumMonthly": 10.0
          }
          EOF

          # The billing service should reject negative rates
          if ./pf-billing test; then
            echo "ERROR: Billing service should have rejected invalid rate card"
            exit 1
          else
            echo "✓ Rate card validation working correctly"
          fi

      - name: Test future timestamp rejection
        run: |
          # Test that usage events with future timestamps are rejected
          echo "Testing future timestamp rejection..."

          # Create a test usage event with future timestamp
          cat > future-event.json << EOF
          {
            "tenantId": "test-tenant",
            "cpuMs": 1000,
            "netBytes": 1024,
            "ts": "2025-07-29T19:05:56-07:00"
          }
          EOF

          # The billing service should reject future timestamps
          if curl -X POST http://localhost:3000/usage              -H "Content-Type: application/json"              -d @future-event.json; then
            echo "ERROR: Billing service should have rejected future timestamp"
            exit 1
          else
            echo "✓ Future timestamp rejection working correctly"
          fi

      - name: Test cost calculation
        run: |
          # Test cost calculation with known values
          echo "Testing cost calculation..."

          # Create test usage events
          cat > test-events.json << EOF
          [
            {
              "tenantId": "test-tenant",
              "cpuMs": 1000000,
              "netBytes": 104857600,
              "ts": "2025-07-28T19:05:56-07:00"
            }
          ]
          EOF

          # Send test events
          curl -X POST http://localhost:3000/usage/batch              -H "Content-Type: application/json"              -d @test-events.json

          # Calculate expected cost
          # CPU: 1M ms * 0.000001 = new.00
          # Network: 100MB * 0.01 = new.00
          # Total: .00 (above minimum of new0.00, so new0.00)
          expected_cost=10.00

          # Get actual cost from API
          actual_cost=

          if [ "" = "" ]; then
            echo "✓ Cost calculation verified: "
          else
            echo "ERROR: Cost calculation mismatch. Expected: , Got: "
            exit 1
          fi

      - name: Test invoice generation
        run: |
          # Test PDF and CSV invoice generation
          echo "Testing invoice generation..."

          # Test CSV download
          if ./pf-billing download --tenant test-tenant --period 2025-07 --format csv; then
            echo "✓ CSV invoice generation working"
          else
            echo "ERROR: CSV invoice generation failed"
            exit 1
          fi

          # Test PDF download
          if ./pf-billing download --tenant test-tenant --period 2025-07 --format pdf; then
            echo "✓ PDF invoice generation working"
          else
            echo "ERROR: PDF invoice generation failed"
            exit 1
          fi

      - name: Test billing job
        run: |
          # Test the billing aggregation job
          echo "Testing billing job..."

          if ./pf-billing run-job --period 2025-07; then
            echo "✓ Billing job completed successfully"
          else
            echo "ERROR: Billing job failed"
            exit 1
          fi

      - name: Verify test coverage
        working-directory: runtime/ledger
        run: |
          # Run tests with coverage
          npm test -- --coverage

          # Check that billing.ts has >= 90% coverage
          coverage=

          if [ "" -ge 90 ]; then
            echo "✓ Test coverage: % (>= 90%)"
          else
            echo "ERROR: Test coverage % is below 90%"
            exit 1
          fi

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: billing-test-results
          path: |
            *.json
            *.csv
            *.pdf
          retention-days: 7
